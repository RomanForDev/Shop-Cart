Modelo de carrito de compras básico y funcional para e-commerce con Javascript vanilla. Con variatntes para cambiar el modelo de funcionamiento en algunos aspectos y adaptarse a otro tipos de comercios (principalmente de mayor volúmen de ventas, para lo que existe la posibilidadde agregar un boton para quitar cantidad al lado del de agregar). Funciona con un array de objetos en un js local simulando una base de datos para la muestra de los objetos disponibles como también con un json local para utilizarlo mediante fetch, el cual es este último la manera en la que se encuentra funcionando, además de las funciones automatizadas para la muestra de las existencias, cantidades, el valor y su actualización enteramente dinámica. También cuenta con un reinicio del carrito como además una confirmación de compra con la idea de que la misma redirija a un sistema de pagos. Se generan alertas integradas mediante SweetAlert2 que se muestran en pantalla con sus correspondientes confirmaciones dependiendo el caso, las hay para agregar productos al carrito, para cuando son removidos del mismo y cuando se confirma la compra. El apartado de estilo fue realizado con SASS, con un grid reactivo a la cantidad de elementos de la base de datos y se encuentra importado al styles.scss, separandose cada index como cada partial .scss, además con animaciones integradas en AOS.

//////////////////////////////////////////////////////////////////////////////

Basic and functional shopping cart template for e-commerce with vanilla Javascript. With variants to modify the operating model in some aspects and adapt to other types of businesses (mainly those with higher sales volumes, for which there is the option of adding a button to remove quantity next to the add button). It works with an array of objects in a local JS simulating a database to display available objects, as well as with a local JSON for use with fetch, which is the latter way it works, in addition to automated functions for displaying stock, quantities, value, and their entirely dynamic updating. It also has a cart reset function as well as a purchase confirmation with the idea that it redirects to a payment system. Integrated alerts are generated through SweetAlert2 and displayed on screen with their corresponding confirmations depending on the case. There are alerts for adding products to the cart, for when they are removed from it, and for when the purchase is confirmed. The style section was created with SASS, with a grid that responds to the number of elements in the database and is imported into styles.scss, separating each index as each partial .scss, and also with animations integrated into AOS.

Resta al proyecto:
* Media Querys para: mobile (320-480px), tablets (481-768px) en cart.html. (No son muy necesarios en index.html, las cards ya estan en medidas responsive, cuanto mucho para achicar el tamaño de logos y fuentes).
* Rever paleta de colores y estilos.
* Solucionar carrito que emite la alerta de confirmacion de compra cuando se borran todos los elementos uno por uno pese a no haber nada ya en la memoria.